char int float double 


int x; // x-> variable 


int y; //memory byte ->  TC 2 byte  GCC 4 byte 
16 bit / DOS 


loop -> 
for 
while 
do...while 


switch 


if 
if..else 
else..if 
nested if else 


-------------------------------


int a=10;
int b=2; 

int c = a/b;//10/2
int d = a%b; // 10/2 mod -> rem -> 0 




float a=10.2;
float b=2.1; 

int c = a/b;//10/2
int d = a%b; // 10/2 mod -> rem -> 0 


modulo -> will not work with real numbers [ float double ]


fmod(a,b); => rem  [ fmod is used to find remainder for real numbers]


int a = 5;
int b = 2
int c = a/b;// 5/2 => 2.5 => 2  {implicit casting}  
c-> 2 


float c = (float)a/b;  // float/int //2.5 2 
                    //explicit casting 




float f = 2.2; 
//floor 
//ceil 

float ans = floor(f); // 2.0 
float ans = ceil(f); // 3.0 



float x= -1.5;

float ans = floor(x) ; // -2


float ans = 2.5 ; //float double 

by default real number treat as Float or Double ? 
2.5 
2.5f 
2.5F 

---------------------------------
int a = 10; 

int a_ = 10; 

int _a = 10; 

int price$ = 2200;

under score->as special symbol we can use 

_ , 0-9  , a-z , A-Z 


------------------------------------
#include<stdio.h>
int main()
{
    enum status { pass, fail, atkt};
    enum status stud1, stud2, stud3;
    stud1 = pass;//0
    stud2 = atkt;//2
    stud3 = fail;//1
    printf("%d, %d, %d\n", stud1, stud2, stud3);//0 2 1 
    return 0;
}
a) 0, 1, 2
b) 1, 2, 3
c) 0, 2, 1 [correct]
d) 1, 3, 2

----------------------------------------
constant -> collection 
const int x = 10; 


enum status { pass, fail, atkt}; //0 1  2 
enum status { pass=10, fail=20, atkt=30};
enum status { pass=10, fail, atkt}; ?? 



#include<stdio.h>
int main()
{
    enum status { pass=10, fail, atkt};
    enum status stud1, stud2, stud3;
    stud1 = pass;//0
    stud2 = atkt;//2
    stud3 = fail;//1
    printf("%d, %d, %d\n", stud1, stud2, stud3);//0 2 1 
    return 0;
}
-----------------------------------------
#include<stdio.h>
int main()
{
    enum status { pass, fail, atkt};
    enum status stud1, stud2, stud3;
    stud1 = pass;//0
    stud2 = atkt;//2
    stud3 = fail;//1
    atkt = stud1 + pass+ fail; 

    return 0;
}
error 
-------------------------------

#include<stdio.h>
int ans = 10;
int main()
{
    int ans = 20;
    printf("%d",ans);//20 
    return 0;
}
---------------------------


#include<stdio.h>
int ans = 10;
int 2ans = 20;
int 3ans = 30; 
int main()
{
    int ans = 20;
    printf("%d",ans);// 
    printf("%d",3ans);//
 
    return 0;
}
ERROR 
----------------------

#include<stdio.h>
int main()
{
    int a=10;
    int b = 20;
    int c = 30 ;
    int ans = a < b < c; // 1 0 
    ans-> ==> 1 
    return 0;
}

----------------------

#include<stdio.h>
int z; //global : extern : 0 
int main()
{
    static int ss ; //static -> 0 
    int x;//local -> auto{stack}{g.v} 
    int a[5] = {1,2};
    printf("%d %d %d",a[1],a[2],a[3]);//2 0 0 

    printf("%d",z); // 0
    printf("%d",x); // g.v 
    
    printf("%d",ss); // 0
    return 0;
}

---------------------------------------------
#include<stdio.h> 

void abc(){
    static int x = 10; //one and only one -> memory -> one time 

    int y =10; 

    printf("\nx = %d",x);//10
    printf("\ny = %d",y);//10
    x++;
    y++;
}

int main(){
    abc();
    abc();
    abc();
    return 0; 
}

---------------------------------
2500 -> x : 11 :static 
 
 



    static int a=10; 
void sub(){


    printf("%d",a++); //10 11 12 

}

int main(){

    sub();//10
    sub();//10

    sub();//
    //13 -> c print 
   return 0;
}

------------------------------------

#include<stdio.h> 
int a=10; 
void sub(){
    printf("%d",a++); // 10 11 
}

int main(){
    sub();// 
    sub();//
    printf("%d",a);//10 11 12 
    return 0;
}
--------------------------